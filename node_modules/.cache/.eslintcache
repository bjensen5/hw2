[{"/home/lam/hw2/src/index.js":"1","/home/lam/hw2/src/App.js":"2","/home/lam/hw2/src/CreateTodo.js":"3","/home/lam/hw2/src/TodoList.js":"4","/home/lam/hw2/src/reducers.js":"5","/home/lam/hw2/src/user/UserBar.js":"6","/home/lam/hw2/src/Todo.js":"7","/home/lam/hw2/src/user/Register.js":"8","/home/lam/hw2/src/user/Login.js":"9","/home/lam/hw2/src/user/Logout.js":"10","/home/lam/hw2/src/Contexts.js":"11","/home/lam/hw2/src/Header.js":"12","/home/lam/hw2/src/ChangeTheme.js":"13"},{"size":427,"mtime":1634591651668,"results":"14","hashOfConfig":"15"},{"size":2068,"mtime":1634589846628,"results":"16","hashOfConfig":"15"},{"size":1118,"mtime":1634583560098,"results":"17","hashOfConfig":"15"},{"size":257,"mtime":1634583560098,"results":"18","hashOfConfig":"15"},{"size":1310,"mtime":1634585671318,"results":"19","hashOfConfig":"15"},{"size":425,"mtime":1634591004208,"results":"20","hashOfConfig":"15"},{"size":924,"mtime":1634589060518,"results":"21","hashOfConfig":"15"},{"size":1433,"mtime":1634590898438,"results":"22","hashOfConfig":"15"},{"size":851,"mtime":1634590605538,"results":"23","hashOfConfig":"15"},{"size":449,"mtime":1634590733328,"results":"24","hashOfConfig":"15"},{"size":226,"mtime":1634588954688,"results":"25","hashOfConfig":"15"},{"size":253,"mtime":1634588838748,"results":"26","hashOfConfig":"15"},{"size":1086,"mtime":1634589779278,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u1ysmy",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},"/home/lam/hw2/src/index.js",[],"/home/lam/hw2/src/App.js",["59","60"],"import React, {useState, useReducer, useEffect} from 'react';\nimport { useResource } from 'react-request-hook';\n\nimport UserBar from './user/UserBar'\nimport CreateTodo from './CreateTodo'\nimport TodoList from './TodoList'\nimport appReducer from './reducers';\nimport Header from './Header'\nimport ChangeTheme from './ChangeTheme';\n\nimport { ThemeContext, StateContext} from './Contexts'\n\n\nfunction App() {\n\n  const [ todos, getTodos ] = useResource(() => ({\n    url: '/todos',\n    method: 'get'\n  }))\n\n  const initialTodos = [\n    {\n      title: \"old todo\",\n      description: \"Build beautiful art\",\n      author: \"jehovah\"\n    },\n    {\n      title: \"old todo\",\n      description: \"Make charitable contributions\",\n      author: \"jehovah\"\n    },\n    {\n      title: \"old todo\",\n      description: \"Buy a Ferrari\",\n      author: \"jehovah\"\n    },\n    {\n      title: \"old todo\",\n      description: \"Build health and wealth\",\n      author: \"jehovah\"\n    },\n    {\n      title: \"old todo\",\n      description: \"get gmi money\",\n      author: \"jehovah\"\n    }\n  ]\n\n  //const [ posts, setPosts ] = useState(initialPosts)\n\n  // const [ user, dispatchUser ] = useReducer(userReducer, '')\n  // const [ posts, dispatchPosts] = useReducer(postReducer, initialPosts)\n\n  const [ state, dispatch ] = useReducer(appReducer, { user: '', todos: [] })\n\n\n  useEffect(getTodos, [])\n\n  useEffect(() => {\n    if (todos && todos.data) {\n      dispatch({ type: 'FETCH_TODOS', todos: todos.data })\n    }\n  }, [todos])\n\n  const {user} = state;\n\n  const [ theme, setTheme ] = useState({\n    primaryColor: 'black',\n    secondaryColor: 'green'\n  })\n\n  return (\n    <div>\n      <ThemeContext.Provider value={theme}>\n        <StateContext.Provider value={{state: state, dispatch: dispatch}}>\n          <Header text=\"Todo App\" />\n          <ChangeTheme theme={theme} setTheme={setTheme} />\n          <UserBar />\n\n          <br/><br/><hr/><br/> \n\n          {user && <CreateTodo /> }\n          <TodoList />\n\n        </StateContext.Provider>\n      </ThemeContext.Provider>\n    </div>\n  )\n}\n\nexport default App;\n",["61","62"],"/home/lam/hw2/src/CreateTodo.js",["63","64"],"import React, {useState} from 'react'\n\nexport default function CreateTodo ({user, dispatch}) {\n\n    const [ title, setTitle ] = useState('')\n    const [ description, setDescription ] = useState('')\n    const [ dateCreated, setDateCreated ] = useState('')\n    \n\n    function handleTitle (evt) { setTitle(evt.target.value) }\n\n    function handleDescription (evt) { setDescription(evt.target.value) }\n\n\n     return (\n          <form onSubmit={e => {e.preventDefault(); dispatch({type: \"CREATE_TODO\", title, description, author: user});} }>\n             \n             <div>Do you have any <i> new todos</i> <b>{user}</b> ? </div> < br />\n\n             <div>\n                 <label htmlFor=\"create-title\">Title:</label><br />\n                 <input type=\"text\" value={title} onChange={handleTitle} name=\"create-title\"  id=\"create-title\" />\n             </div>\n\n             <label htmlFor=\"create-description\">Description:</label><br />\n             <textarea value={description} onChange={handleDescription} />\n\n             <br />\n             <input type=\"submit\" value=\"Create\" />\n         </form>   \n          )\n }\n ","/home/lam/hw2/src/TodoList.js",[],"/home/lam/hw2/src/reducers.js",[],"/home/lam/hw2/src/user/UserBar.js",[],"/home/lam/hw2/src/Todo.js",["65"],"import React, { useContext } from 'react'\nimport { ThemeContext, StateContext } from './Contexts'\n\nexport default function Todo ({ title, description, dateCreated, completed, dateCompleted, todoId }) {\n\n     const {socondaryColor} = useContext(ThemeContext);\n     const {dispatch} = useContext(StateContext);\n\n     return (\n          <div>\n               <h3>{title}</h3>\n               <div>{description}</div>\n               <br />\n               <div><i>created on:</i><br />{dateCreated}</div>\n               <input type=\"checkbox\" onClick={e => {dispatch({type: 'TOGGLE_TODO', completed: !completed, todoId: todoId})}} />\n               <button onClick={(e) => {dispatch({type: 'DELETE_TODO', todoId: todoId})}}>Delete Todo</button>\n               {completed && <><br /><i>todo completed on: {new Date(dateCompleted).toLocaleDateString('en-us')}</i><br /></>}\n               <hr/>\n          \n          </div> \n     )\n}\n","/home/lam/hw2/src/user/Register.js",[],"/home/lam/hw2/src/user/Login.js",[],"/home/lam/hw2/src/user/Logout.js",[],"/home/lam/hw2/src/Contexts.js",[],"/home/lam/hw2/src/Header.js",[],"/home/lam/hw2/src/ChangeTheme.js",["66","67"],"import React, {useState, useEffect} from 'react'\nimport { useResource } from 'react-request-hook'\n\nfunction ThemeItem ({ theme, active, onClick }) {\n    return (\n       <span onClick={onClick} style={{ cursor: 'pointer', paddingLeft: 8, fontWeight: active ? 'bold' : 'normal' }}>\n           <span style={{ color: theme.primaryColor }}>Primary</span> / \n           <span style={{ color: theme.secondaryColor }}>Secondary</span>\n        </span>\n    )\n } \n\nexport default function ChangeTheme ({ theme, setTheme }) {\n\n    const [ themes, getThemes ] = useResource(() => ({\n        url: '/themes',\n        method: 'get'\n    }))\n\n    useEffect(getThemes, [])\n\n    const { data, isLoading } = themes\n\n\n    function isActive (t) { return t.primaryColor === theme.primaryColor && t.secondaryColor === theme.secondaryColor }\n    return ( <div>\n         Change theme:\n        \n         {isLoading && ' Loading themes...'}\n\n         {data && data.map((t, i) =>\n                 <ThemeItem key={'theme-' + i} theme={t} active={isActive(t)} onClick={() => setTheme(t)} />\n         )} </div>\n    )\n}\n",{"ruleId":"68","severity":1,"message":"69","line":21,"column":9,"nodeType":"70","messageId":"71","endLine":21,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":57,"column":3,"nodeType":"70","endLine":57,"endColumn":12,"suggestions":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"68","severity":1,"message":"79","line":7,"column":13,"nodeType":"70","messageId":"71","endLine":7,"endColumn":24},{"ruleId":"68","severity":1,"message":"80","line":7,"column":26,"nodeType":"70","messageId":"71","endLine":7,"endColumn":40},{"ruleId":"68","severity":1,"message":"81","line":6,"column":13,"nodeType":"70","messageId":"71","endLine":6,"endColumn":27},{"ruleId":"68","severity":1,"message":"82","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":24},{"ruleId":"72","severity":1,"message":"83","line":20,"column":5,"nodeType":"70","endLine":20,"endColumn":14,"suggestions":"84"},"no-unused-vars","'initialTodos' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.",["85"],"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'dateCreated' is assigned a value but never used.","'setDateCreated' is assigned a value but never used.","'socondaryColor' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getThemes'. Either include it or remove the dependency array.",["88"],{"desc":"89","fix":"90"},"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [getTodos]",{"range":"93","text":"94"},"Update the dependencies array to be: [getThemes]",{"range":"95","text":"96"},[1350,1352],"[getTodos]",[650,652],"[getThemes]"]